name: CI-COVERAGE
on:
  push:
    branches: 
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    branches: 
      - master

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: create env file
      run: |
        touch .env
        echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
        echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env

    - name: build
      run: docker-compose up --build -d
    
    - name: api tests
      run: docker-compose run api coverage run manage.py test
    
    - name: api xml for coverage
      run: docker-compose run api coverage xml

    - name: client tests
      run: docker-compose run client yarn test:unit:coverage

    # verify python code with pyflakes
    - uses: lgeiger/pyflakes-action@master

    - name: client lint
      run: docker-compose run client yarn lint

    - uses: codecov/codecov-action@v1
      with:
        files: api/coverage.xml, client/test/jest/coverage/coverage-final.json
        fail_ci_if_error: true
        verbose: true
        